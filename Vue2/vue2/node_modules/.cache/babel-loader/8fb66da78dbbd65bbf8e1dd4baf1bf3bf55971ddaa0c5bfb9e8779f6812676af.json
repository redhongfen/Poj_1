{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '@/router';\nimport axios from 'axios';\n\n// 创建可一个新的axios对象\nconst request = axios.create({\n  baseURL: 'http://localhost:8081',\n  // 后端的接口地址  ip:port\n  timeout: 300000\n});\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  let user = JSON.parse(localStorage.getItem(\"honey-user\")) || {};\n  config.headers['token'] = user.token; // 设置请求头\n\n  return config;\n}, error => {\n  console.error('request error: ' + error); // for debug\n  return Promise.reject(error);\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(response => {\n  let res = response.data;\n\n  // 兼容服务端返回的字符串数据\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n  if (res.code === '401') {\n    router.push('/login');\n  }\n  return res;\n}, error => {\n  if (error.response && error.response.status === 401) {\n    console.error('Unauthorized, redirecting to login...');\n    router.push('/login');\n    return Promise.resolve({});\n  } else {\n    console.error('response error: ' + error);\n  } // for debug\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["router","axios","request","create","baseURL","timeout","interceptors","use","config","headers","user","JSON","parse","localStorage","getItem","token","error","console","Promise","reject","response","res","data","code","push","status","resolve"],"sources":["K:/A_Poj_Test/Vue2/vue2/src/utils/request.js"],"sourcesContent":["import router from '@/router';\r\nimport axios from 'axios'\r\n\r\n// 创建可一个新的axios对象\r\nconst request = axios.create({\r\n    baseURL: 'http://localhost:8081',   // 后端的接口地址  ip:port\r\n    timeout: 300000\r\n})\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n    let user = JSON.parse(localStorage.getItem(\"honey-user\")) ||{}\r\n    config.headers['token'] = user.token  // 设置请求头\r\n\r\n    return config\r\n}, error => {\r\n    console.error('request error: ' + error) // for debug\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        if(res.code === '401'){\r\n            router.push('/login')\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        if (error.response && error.response.status === 401) {\r\n            console.error('Unauthorized, redirecting to login...');\r\n            router.push('/login');\r\n            return Promise.resolve({}); \r\n        }else{\r\n            console.error('response error: ' + error)\r\n        } // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nexport default request"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,uBAAuB;EAAI;EACpCC,OAAO,EAAE;AACb,CAAC,CAAC;AACF;AACA;AACA;AACAH,OAAO,CAACI,YAAY,CAACJ,OAAO,CAACK,GAAG,CAACC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;EACjE,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAG,CAAC,CAAC;EAC9DN,MAAM,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,CAACK,KAAK,EAAE;;EAEtC,OAAOP,MAAM;AACjB,CAAC,EAAEQ,KAAK,IAAI;EACRC,OAAO,CAACD,KAAK,CAAC,iBAAiB,GAAGA,KAAK,CAAC,EAAC;EACzC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA;AACAd,OAAO,CAACI,YAAY,CAACc,QAAQ,CAACb,GAAG,CAC7Ba,QAAQ,IAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;;EAEvB;EACA,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IACzBA,GAAG,GAAGA,GAAG,GAAGV,IAAI,CAACC,KAAK,CAACS,GAAG,CAAC,GAAGA,GAAG;EACrC;EACA,IAAGA,GAAG,CAACE,IAAI,KAAK,KAAK,EAAC;IAClBvB,MAAM,CAACwB,IAAI,CAAC,QAAQ,CAAC;EACzB;EACA,OAAOH,GAAG;AACd,CAAC,EACDL,KAAK,IAAI;EACL,IAAIA,KAAK,CAACI,QAAQ,IAAIJ,KAAK,CAACI,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;IACjDR,OAAO,CAACD,KAAK,CAAC,uCAAuC,CAAC;IACtDhB,MAAM,CAACwB,IAAI,CAAC,QAAQ,CAAC;IACrB,OAAON,OAAO,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,MAAI;IACDT,OAAO,CAACD,KAAK,CAAC,kBAAkB,GAAGA,KAAK,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;AAGD,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}