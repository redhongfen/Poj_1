{"ast":null,"code":"/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\"use strict\";\n\nrequire(\"core-js/modules/es.set.difference.v2.js\");\nrequire(\"core-js/modules/es.set.intersection.v2.js\");\nrequire(\"core-js/modules/es.set.is-disjoint-from.v2.js\");\nrequire(\"core-js/modules/es.set.is-subset-of.v2.js\");\nrequire(\"core-js/modules/es.set.is-superset-of.v2.js\");\nrequire(\"core-js/modules/es.set.symmetric-difference.v2.js\");\nrequire(\"core-js/modules/es.set.union.v2.js\");\nconst KEYS = require(\"./visitor-keys.json\");\n\n// Types.\nconst NODE_TYPES = Object.freeze(Object.keys(KEYS));\n\n// Freeze the keys.\nfor (const type of NODE_TYPES) {\n  Object.freeze(KEYS[type]);\n}\nObject.freeze(KEYS);\n\n// List to ignore keys.\nconst KEY_BLACKLIST = new Set([\"parent\", \"leadingComments\", \"trailingComments\"]);\n\n/**\n * Check whether a given key should be used or not.\n * @param {string} key The key to check.\n * @returns {boolean} `true` if the key should be used.\n */\nfunction filterKey(key) {\n  return !KEY_BLACKLIST.has(key) && key[0] !== \"_\";\n}\n\n//------------------------------------------------------------------------------\n// Public interfaces\n//------------------------------------------------------------------------------\n\nmodule.exports = Object.freeze({\n  /**\n   * Visitor keys.\n   * @type {{ [type: string]: string[] | undefined }}\n   */\n  KEYS,\n  /**\n   * Get visitor keys of a given node.\n   * @param {Object} node The AST node to get keys.\n   * @returns {string[]} Visitor keys of the node.\n   */\n  getKeys(node) {\n    return Object.keys(node).filter(filterKey);\n  },\n  // Disable valid-jsdoc rule because it reports syntax error on the type of @returns.\n  // eslint-disable-next-line valid-jsdoc\n  /**\n   * Make the union set with `KEYS` and given keys.\n   * @param {Object} additionalKeys The additional keys.\n   * @returns {{ [type: string]: string[] | undefined }} The union set.\n   */\n  unionWith(additionalKeys) {\n    const retv = Object.assign({}, KEYS);\n    for (const type of Object.keys(additionalKeys)) {\n      if (retv.hasOwnProperty(type)) {\n        const keys = new Set(additionalKeys[type]);\n        for (const key of retv[type]) {\n          keys.add(key);\n        }\n        retv[type] = Object.freeze(Array.from(keys));\n      } else {\n        retv[type] = Object.freeze(Array.from(additionalKeys[type]));\n      }\n    }\n    return Object.freeze(retv);\n  }\n});","map":{"version":3,"names":["require","KEYS","NODE_TYPES","Object","freeze","keys","type","KEY_BLACKLIST","Set","filterKey","key","has","module","exports","getKeys","node","filter","unionWith","additionalKeys","retv","assign","hasOwnProperty","add","Array","from"],"sources":["K:/A_Poj_Test/Vue2/vue2/node_modules/eslint-visitor-keys/lib/index.js"],"sourcesContent":["/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\"use strict\";\n\nconst KEYS = require(\"./visitor-keys.json\");\n\n// Types.\nconst NODE_TYPES = Object.freeze(Object.keys(KEYS));\n\n// Freeze the keys.\nfor (const type of NODE_TYPES) {\n    Object.freeze(KEYS[type]);\n}\nObject.freeze(KEYS);\n\n// List to ignore keys.\nconst KEY_BLACKLIST = new Set([\n    \"parent\",\n    \"leadingComments\",\n    \"trailingComments\"\n]);\n\n/**\n * Check whether a given key should be used or not.\n * @param {string} key The key to check.\n * @returns {boolean} `true` if the key should be used.\n */\nfunction filterKey(key) {\n    return !KEY_BLACKLIST.has(key) && key[0] !== \"_\";\n}\n\n//------------------------------------------------------------------------------\n// Public interfaces\n//------------------------------------------------------------------------------\n\nmodule.exports = Object.freeze({\n\n    /**\n     * Visitor keys.\n     * @type {{ [type: string]: string[] | undefined }}\n     */\n    KEYS,\n\n    /**\n     * Get visitor keys of a given node.\n     * @param {Object} node The AST node to get keys.\n     * @returns {string[]} Visitor keys of the node.\n     */\n    getKeys(node) {\n        return Object.keys(node).filter(filterKey);\n    },\n\n    // Disable valid-jsdoc rule because it reports syntax error on the type of @returns.\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Make the union set with `KEYS` and given keys.\n     * @param {Object} additionalKeys The additional keys.\n     * @returns {{ [type: string]: string[] | undefined }} The union set.\n     */\n    unionWith(additionalKeys) {\n        const retv = Object.assign({}, KEYS);\n\n        for (const type of Object.keys(additionalKeys)) {\n            if (retv.hasOwnProperty(type)) {\n                const keys = new Set(additionalKeys[type]);\n\n                for (const key of retv[type]) {\n                    keys.add(key);\n                }\n\n                retv[type] = Object.freeze(Array.from(keys));\n            } else {\n                retv[type] = Object.freeze(Array.from(additionalKeys[type]));\n            }\n        }\n\n        return Object.freeze(retv);\n    }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAACA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAAAA,OAAA;AAEb,MAAMC,IAAI,GAAGD,OAAO,CAAC,qBAAqB,CAAC;;AAE3C;AACA,MAAME,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,IAAI,CAACJ,IAAI,CAAC,CAAC;;AAEnD;AACA,KAAK,MAAMK,IAAI,IAAIJ,UAAU,EAAE;EAC3BC,MAAM,CAACC,MAAM,CAACH,IAAI,CAACK,IAAI,CAAC,CAAC;AAC7B;AACAH,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC;;AAEnB;AACA,MAAMM,aAAa,GAAG,IAAIC,GAAG,CAAC,CAC1B,QAAQ,EACR,iBAAiB,EACjB,kBAAkB,CACrB,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,GAAG,EAAE;EACpB,OAAO,CAACH,aAAa,CAACI,GAAG,CAACD,GAAG,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;AACpD;;AAEA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGV,MAAM,CAACC,MAAM,CAAC;EAE3B;AACJ;AACA;AACA;EACIH,IAAI;EAEJ;AACJ;AACA;AACA;AACA;EACIa,OAAOA,CAACC,IAAI,EAAE;IACV,OAAOZ,MAAM,CAACE,IAAI,CAACU,IAAI,CAAC,CAACC,MAAM,CAACP,SAAS,CAAC;EAC9C,CAAC;EAED;EACA;EACA;AACJ;AACA;AACA;AACA;EACIQ,SAASA,CAACC,cAAc,EAAE;IACtB,MAAMC,IAAI,GAAGhB,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAEnB,IAAI,CAAC;IAEpC,KAAK,MAAMK,IAAI,IAAIH,MAAM,CAACE,IAAI,CAACa,cAAc,CAAC,EAAE;MAC5C,IAAIC,IAAI,CAACE,cAAc,CAACf,IAAI,CAAC,EAAE;QAC3B,MAAMD,IAAI,GAAG,IAAIG,GAAG,CAACU,cAAc,CAACZ,IAAI,CAAC,CAAC;QAE1C,KAAK,MAAMI,GAAG,IAAIS,IAAI,CAACb,IAAI,CAAC,EAAE;UAC1BD,IAAI,CAACiB,GAAG,CAACZ,GAAG,CAAC;QACjB;QAEAS,IAAI,CAACb,IAAI,CAAC,GAAGH,MAAM,CAACC,MAAM,CAACmB,KAAK,CAACC,IAAI,CAACnB,IAAI,CAAC,CAAC;MAChD,CAAC,MAAM;QACHc,IAAI,CAACb,IAAI,CAAC,GAAGH,MAAM,CAACC,MAAM,CAACmB,KAAK,CAACC,IAAI,CAACN,cAAc,CAACZ,IAAI,CAAC,CAAC,CAAC;MAChE;IACJ;IAEA,OAAOH,MAAM,CAACC,MAAM,CAACe,IAAI,CAAC;EAC9B;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}