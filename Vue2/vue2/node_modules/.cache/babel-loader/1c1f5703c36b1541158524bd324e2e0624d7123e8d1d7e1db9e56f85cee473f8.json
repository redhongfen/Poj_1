{"ast":null,"code":"export default {\n  name: \"SummaryView\",\n  data() {\n    return {\n      tableData: [],\n      // 原始数据\n      filteredTableData: [],\n      // 筛选或排序后的数据\n      pageNum: 1,\n      // 当前页码\n      pageSize: 5,\n      // 每页显示的个数\n      course_code: '',\n      // 查询条件：课程代码\n      student_id: '',\n      // 查询条件：学生学号\n      total: 0,\n      // 总数据条数\n      activeSort: null,\n      // 当前激活的排序类型：'desc' 或 'asc'\n      showLowScores: false // 是否只显示分数低于 60\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    // 加载数据\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/grades/selectByPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          course_code: this.course_code,\n          student_id: this.student_id\n        }\n      }).then(res => {\n        this.tableData = res.data.list;\n        this.filteredTableData = [...this.tableData]; // 初始化筛选数据\n        this.total = res.data.total;\n      });\n    },\n    // 重置查询条件\n    reset() {\n      this.course_code = '';\n      this.student_id = '';\n      this.load();\n      this.filteredTableData = [...this.tableData];\n      this.activeSort = null; // 清除排序状态\n      this.showLowScores = false; // 清除筛选状态\n    },\n    // 分页切换\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    // 切换排序状态\n    toggleSort(type) {\n      if (this.activeSort === type) {\n        // 如果已经激活，取消排序\n        this.activeSort = null;\n        this.resetFilter();\n      } else {\n        // 激活排序\n        this.activeSort = type;\n        this.sortScores(type);\n      }\n    },\n    // 排序逻辑\n    sortScores(type) {\n      if (type === 'desc') {\n        this.filteredTableData.sort((a, b) => b.score - a.score);\n      } else if (type === 'asc') {\n        this.filteredTableData.sort((a, b) => a.score - b.score);\n      }\n    },\n    // 切换分数低于 60 的筛选状态\n    toggleFilterLowScores() {\n      if (this.showLowScores) {\n        // 如果已经激活，取消筛选\n        this.showLowScores = false;\n        this.resetFilter();\n      } else {\n        // 激活筛选\n        this.showLowScores = true;\n        this.filteredTableData = this.tableData.filter(item => item.score < 60);\n      }\n    },\n    // 重置筛选和排序\n    resetFilter() {\n      this.filteredTableData = [...this.tableData];\n      this.activeSort = null; // 清除排序状态\n      this.showLowScores = false; // 清除筛选状态\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","filteredTableData","pageNum","pageSize","course_code","student_id","total","activeSort","showLowScores","mounted","load","methods","$request","get","params","then","res","list","reset","handleCurrentChange","toggleSort","type","resetFilter","sortScores","sort","a","b","score","toggleFilterLowScores","filter","item"],"sources":["src/views/manager/SummaryView.vue"],"sourcesContent":["<template>\r\n    <div class=\"\">\r\n        <!-- 查询部分 -->\r\n        <div>\r\n            <el-input style=\"width: 200px\" placeholder=\"查询课程代码\" v-model=\"course_code\"></el-input>\r\n            <el-input style=\"width: 200px; margin: 0 5px\" placeholder=\"查询学生学号\" v-model=\"student_id\"></el-input>\r\n            <el-button type=\"primary\" @click=\"load(1)\">查询</el-button>\r\n            <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n\r\n                        <!-- 添加排序和筛选按钮 -->\r\n                        <el-button \r\n                :type=\"activeSort === 'desc' ? 'success' : 'primary'\" \r\n                @click=\"toggleSort('desc')\">\r\n                按分数降序排序\r\n            </el-button>\r\n            <el-button \r\n                :type=\"activeSort === 'asc' ? 'success' : 'primary'\" \r\n                @click=\"toggleSort('asc')\">\r\n                按分数升序排序\r\n            </el-button>\r\n            <el-button \r\n                :type=\"showLowScores ? 'warning' : 'primary'\" \r\n                @click=\"toggleFilterLowScores\">\r\n                显示分数低于 60 的学生\r\n            </el-button>\r\n        </div>\r\n\r\n        <div style=\"margin: 10px 0\">\r\n\r\n        </div>\r\n\r\n        <!-- 数据表 -->\r\n        <el-table :data=\"filteredTableData\" stripe :header-cell-style=\"{ backgroundColor: 'aliceblue', color: '#666' }\">\r\n            <el-table-column label=\"课程代码\" prop=\"course_code\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"分数\" prop=\"score\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"学生学号\" prop=\"student_id\" align=\"center\"></el-table-column>\r\n        </el-table>\r\n\r\n        <div style=\"margin: 10px 0\">\r\n            <el-pagination\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"pageNum\"\r\n                :page-sizes=\"[5, 10, 20, 50]\"\r\n                :page-size=\"pageSize\"\r\n                layout=\"total, prev, pager, next\"\r\n                :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"SummaryView\",\r\n    data() {\r\n        return {\r\n            tableData: [], // 原始数据\r\n            filteredTableData: [], // 筛选或排序后的数据\r\n            pageNum: 1,   // 当前页码\r\n            pageSize: 5,  // 每页显示的个数\r\n            course_code: '', // 查询条件：课程代码\r\n            student_id: '', // 查询条件：学生学号\r\n            total: 0, // 总数据条数\r\n            activeSort: null, // 当前激活的排序类型：'desc' 或 'asc'\r\n            showLowScores: false // 是否只显示分数低于 60\r\n        };\r\n    },\r\n    mounted() {\r\n        this.load();\r\n    },\r\n    methods: {\r\n        // 加载数据\r\n        load(pageNum) {\r\n            if (pageNum) this.pageNum = pageNum;\r\n            this.$request.get('/grades/selectByPage', {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    course_code: this.course_code,\r\n                    student_id: this.student_id,\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data.list;\r\n                this.filteredTableData = [...this.tableData]; // 初始化筛选数据\r\n                this.total = res.data.total;\r\n            });\r\n        },\r\n\r\n        // 重置查询条件\r\n        reset() {\r\n            this.course_code = '';\r\n            this.student_id = '';\r\n            this.load();\r\n            this.filteredTableData = [...this.tableData];\r\n            this.activeSort = null; // 清除排序状态\r\n            this.showLowScores = false; // 清除筛选状态\r\n        },\r\n\r\n        // 分页切换\r\n        handleCurrentChange(pageNum) {\r\n            this.load(pageNum);\r\n        },\r\n\r\n        // 切换排序状态\r\n        toggleSort(type) {\r\n            if (this.activeSort === type) {\r\n                // 如果已经激活，取消排序\r\n                this.activeSort = null;\r\n                this.resetFilter();\r\n            } else {\r\n                // 激活排序\r\n                this.activeSort = type;\r\n                this.sortScores(type);\r\n            }\r\n        },\r\n\r\n        // 排序逻辑\r\n        sortScores(type) {\r\n            if (type === 'desc') {\r\n                this.filteredTableData.sort((a, b) => b.score - a.score);\r\n            } else if (type === 'asc') {\r\n                this.filteredTableData.sort((a, b) => a.score - b.score);\r\n            }\r\n        },\r\n\r\n        // 切换分数低于 60 的筛选状态\r\n        toggleFilterLowScores() {\r\n            if (this.showLowScores) {\r\n                // 如果已经激活，取消筛选\r\n                this.showLowScores = false;\r\n                this.resetFilter();\r\n            } else {\r\n                // 激活筛选\r\n                this.showLowScores = true;\r\n                this.filteredTableData = this.tableData.filter(item => item.score < 60);\r\n            }\r\n        },\r\n\r\n        // 重置筛选和排序\r\n        resetFilter() {\r\n            this.filteredTableData = [...this.tableData];\r\n            this.activeSort = null; // 清除排序状态\r\n            this.showLowScores = false; // 清除筛选状态\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":"AAoDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,iBAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,WAAA;MAAA;MACAC,UAAA;MAAA;MACAC,KAAA;MAAA;MACAC,UAAA;MAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA;IACAD,KAAAR,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAU,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAZ,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,WAAA,OAAAA,WAAA;UACAC,UAAA,OAAAA;QACA;MACA,GAAAU,IAAA,CAAAC,GAAA;QACA,KAAAhB,SAAA,GAAAgB,GAAA,CAAAjB,IAAA,CAAAkB,IAAA;QACA,KAAAhB,iBAAA,YAAAD,SAAA;QACA,KAAAM,KAAA,GAAAU,GAAA,CAAAjB,IAAA,CAAAO,KAAA;MACA;IACA;IAEA;IACAY,MAAA;MACA,KAAAd,WAAA;MACA,KAAAC,UAAA;MACA,KAAAK,IAAA;MACA,KAAAT,iBAAA,YAAAD,SAAA;MACA,KAAAO,UAAA;MACA,KAAAC,aAAA;IACA;IAEA;IACAW,oBAAAjB,OAAA;MACA,KAAAQ,IAAA,CAAAR,OAAA;IACA;IAEA;IACAkB,WAAAC,IAAA;MACA,SAAAd,UAAA,KAAAc,IAAA;QACA;QACA,KAAAd,UAAA;QACA,KAAAe,WAAA;MACA;QACA;QACA,KAAAf,UAAA,GAAAc,IAAA;QACA,KAAAE,UAAA,CAAAF,IAAA;MACA;IACA;IAEA;IACAE,WAAAF,IAAA;MACA,IAAAA,IAAA;QACA,KAAApB,iBAAA,CAAAuB,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAC,KAAA,GAAAF,CAAA,CAAAE,KAAA;MACA,WAAAN,IAAA;QACA,KAAApB,iBAAA,CAAAuB,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,CAAAE,KAAA,GAAAD,CAAA,CAAAC,KAAA;MACA;IACA;IAEA;IACAC,sBAAA;MACA,SAAApB,aAAA;QACA;QACA,KAAAA,aAAA;QACA,KAAAc,WAAA;MACA;QACA;QACA,KAAAd,aAAA;QACA,KAAAP,iBAAA,QAAAD,SAAA,CAAA6B,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAH,KAAA;MACA;IACA;IAEA;IACAL,YAAA;MACA,KAAArB,iBAAA,YAAAD,SAAA;MACA,KAAAO,UAAA;MACA,KAAAC,aAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}