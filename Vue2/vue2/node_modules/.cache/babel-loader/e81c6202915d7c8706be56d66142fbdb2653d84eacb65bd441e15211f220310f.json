{"ast":null,"code":"export default {\n  name: \"CoursesView\",\n  data() {\n    return {\n      courses: [],\n      // 所有课程\n      enrollments: [],\n      // 所有选课记录\n      filteredCourses: [],\n      // 筛选后的课程\n      course_code: '',\n      // 查询条件：课程代码\n      course_name: '',\n      // 查询条件：课程名称\n      user: JSON.parse(localStorage.getItem('honey-user') || '{}') // 当前用户信息\n    };\n  },\n  created() {\n    this.loadCoursesAndEnrollments(); // 初始化加载课程和选课数据\n  },\n  methods: {\n    // 加载课程和选课记录\n    loadCoursesAndEnrollments() {\n      // 请求所有课程数据\n      this.$request.get('/courses/selectAll').then(res => {\n        if (res.code === \"200\") {\n          this.courses = res.data;\n          this.updateFilteredCourses();\n        } else {\n          this.$message.error(res.msg || \"加载课程失败\");\n        }\n      });\n\n      // 请求所有选课记录\n      this.$request.get('/enrollments/selectAll').then(res => {\n        if (res.code === \"200\") {\n          this.enrollments = res.data;\n          this.updateFilteredCourses();\n        } else {\n          this.$message.error(res.msg || \"加载选课记录失败\");\n        }\n      });\n    },\n    // 更新课程显示状态\n    updateFilteredCourses() {\n      this.filteredCourses = this.courses.map(course => ({\n        ...course,\n        isEnrolled: this.enrollments.some(enrollment => enrollment.student_id === this.user.id && enrollment.course_code === course.course_code)\n      }));\n    },\n    // 查询课程\n    filterCourses() {\n      this.filteredCourses = this.courses.filter(course => (!this.course_code || course.course_code.includes(this.course_code)) && (!this.course_name || course.course_name.includes(this.course_name))).map(course => ({\n        ...course,\n        isEnrolled: this.enrollments.some(enrollment => enrollment.student_id === this.user.id && enrollment.course_code === course.course_code)\n      }));\n    },\n    // 重置查询条件\n    reset() {\n      this.course_code = '';\n      this.course_name = '';\n      this.updateFilteredCourses();\n    },\n    // 选课\n    enroll(course) {\n      this.$request.post('/enrollments/add', {\n        student_id: this.user.id,\n        course_code: course.course_code\n      }).then(res => {\n        if (res.code === \"200\") {\n          this.$message.success(\"选课成功\");\n          this.loadCoursesAndEnrollments(); // 重新加载数据\n        } else {\n          this.$message.error(res.msg || \"选课失败\");\n        }\n      });\n    },\n    // 取消选课\n    unenroll(course) {\n      const enrollment = this.enrollments.find(item => item.student_id === this.user.id && item.course_code === course.course_code);\n      if (enrollment) {\n        this.$request.delete(`/enrollments/delete/${enrollment.enrollment_id}`).then(res => {\n          if (res.code === \"200\") {\n            this.$message.success(\"取消选课成功\");\n            this.loadCoursesAndEnrollments(); // 重新加载数据\n          } else {\n            this.$message.error(res.msg || \"取消选课失败\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","courses","enrollments","filteredCourses","course_code","course_name","user","JSON","parse","localStorage","getItem","created","loadCoursesAndEnrollments","methods","$request","get","then","res","code","updateFilteredCourses","$message","error","msg","map","course","isEnrolled","some","enrollment","student_id","id","filterCourses","filter","includes","reset","enroll","post","success","unenroll","find","item","delete","enrollment_id"],"sources":["src/views/manager/EnrollmentsView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 查询部分 -->\r\n        <div>\r\n            <el-input style=\"width: 200px\" placeholder=\"查询课程代码\" v-model=\"course_code\"></el-input>\r\n            <el-input style=\"width: 200px; margin: 0 5px\" placeholder=\"查询课程名称\" v-model=\"course_name\"></el-input>\r\n            <el-button type=\"primary\" @click=\"filterCourses\">查询</el-button>\r\n            <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n\r\n        <!-- 课程表 -->\r\n        <el-table :data=\"filteredCourses\" stripe :header-cell-style=\"{ backgroundColor: 'aliceblue', color: '#666' }\">\r\n            <el-table-column label=\"课程代码\" prop=\"course_code\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"课程名称\" prop=\"course_name\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"学分\" prop=\"credits\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"课程简介\" prop=\"description\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"学期\" prop=\"semester\" align=\"center\"></el-table-column>\r\n\r\n            <!-- 操作列 -->\r\n            <el-table-column label=\"操作\" align=\"center\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button \r\n                        v-if=\"!scope.row.isEnrolled\" \r\n                        size=\"mini\" \r\n                        type=\"primary\" \r\n                        plain \r\n                        @click=\"enroll(scope.row)\">\r\n                        选课\r\n                    </el-button>\r\n                    <el-button \r\n                        v-else \r\n                        size=\"mini\" \r\n                        type=\"danger\" \r\n                        plain \r\n                        @click=\"unenroll(scope.row)\">\r\n                        取消选课\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n    name: \"CoursesView\",\r\n    data() {\r\n        return {\r\n            courses: [], // 所有课程\r\n            enrollments: [], // 所有选课记录\r\n            filteredCourses: [], // 筛选后的课程\r\n            course_code: '', // 查询条件：课程代码\r\n            course_name: '', // 查询条件：课程名称\r\n            user: JSON.parse(localStorage.getItem('honey-user') || '{}'), // 当前用户信息\r\n        };\r\n    },\r\n    created() {\r\n        this.loadCoursesAndEnrollments(); // 初始化加载课程和选课数据\r\n    },\r\n    methods: {\r\n        // 加载课程和选课记录\r\n        loadCoursesAndEnrollments() {\r\n            // 请求所有课程数据\r\n            this.$request.get('/courses/selectAll').then((res) => {\r\n                if (res.code === \"200\") {\r\n                    this.courses = res.data;\r\n                    this.updateFilteredCourses();\r\n                } else {\r\n                    this.$message.error(res.msg || \"加载课程失败\");\r\n                }\r\n            });\r\n\r\n            // 请求所有选课记录\r\n            this.$request.get('/enrollments/selectAll').then((res) => {\r\n                if (res.code === \"200\") {\r\n                    this.enrollments = res.data;\r\n                    this.updateFilteredCourses();\r\n                } else {\r\n                    this.$message.error(res.msg || \"加载选课记录失败\");\r\n                }\r\n            });\r\n        },\r\n\r\n        // 更新课程显示状态\r\n        updateFilteredCourses() {\r\n            this.filteredCourses = this.courses.map((course) => ({\r\n                ...course,\r\n                isEnrolled: this.enrollments.some(\r\n                    (enrollment) =>\r\n                        enrollment.student_id === this.user.id &&\r\n                        enrollment.course_code === course.course_code\r\n                ),\r\n            }));\r\n        },\r\n\r\n        // 查询课程\r\n        filterCourses() {\r\n            this.filteredCourses = this.courses\r\n                .filter(\r\n                    (course) =>\r\n                        (!this.course_code || course.course_code.includes(this.course_code)) &&\r\n                        (!this.course_name || course.course_name.includes(this.course_name))\r\n                )\r\n                .map((course) => ({\r\n                    ...course,\r\n                    isEnrolled: this.enrollments.some(\r\n                        (enrollment) =>\r\n                            enrollment.student_id === this.user.id &&\r\n                            enrollment.course_code === course.course_code\r\n                    ),\r\n                }));\r\n        },\r\n\r\n        // 重置查询条件\r\n        reset() {\r\n            this.course_code = '';\r\n            this.course_name = '';\r\n            this.updateFilteredCourses();\r\n        },\r\n\r\n        // 选课\r\n        enroll(course) {\r\n            this.$request\r\n                .post('/enrollments/add', {\r\n                    student_id: this.user.id,\r\n                    course_code: course.course_code,\r\n                })\r\n                .then((res) => {\r\n                    if (res.code === \"200\") {\r\n                        this.$message.success(\"选课成功\");\r\n                        this.loadCoursesAndEnrollments(); // 重新加载数据\r\n                    } else {\r\n                        this.$message.error(res.msg || \"选课失败\");\r\n                    }\r\n                });\r\n        },\r\n\r\n        // 取消选课\r\n        unenroll(course) {\r\n            const enrollment = this.enrollments.find(\r\n                (item) =>\r\n                    item.student_id === this.user.id &&\r\n                    item.course_code === course.course_code\r\n            );\r\n            if (enrollment) {\r\n                this.$request.delete(`/enrollments/delete/${enrollment.enrollment_id}`).then((res) => {\r\n                    if (res.code === \"200\") {\r\n                        this.$message.success(\"取消选课成功\");\r\n                        this.loadCoursesAndEnrollments(); // 重新加载数据\r\n                    } else {\r\n                        this.$message.error(res.msg || \"取消选课失败\");\r\n                    }\r\n                });\r\n            }\r\n        },\r\n    },\r\n};\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}