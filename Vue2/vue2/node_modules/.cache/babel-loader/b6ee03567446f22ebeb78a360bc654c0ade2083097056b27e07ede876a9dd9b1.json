{"ast":null,"code":"export default {\n  name: \"ShoppingView\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 5,\n      // 每页显示的个数\n      goodsName: '',\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      fileList: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      // eslint-disable-next-line no-unused-vars\n      this.$confirm('您确认批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.lode();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    del(id) {\n      // eslint-disable-next-line no-unused-vars\n      this.$confirm('您确认删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {\n        role: '商品'\n      }; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    reset() {\n      this.goodsName = '';\n      this.load();\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectByPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          goodsName: this.goodsName\n        }\n      }).then(res => {\n        this.tableData = res.data.list;\n        this.total = res.data.toto;\n      });\n      console.log(tableData);\n      console.log(total);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    // eslint-disable-next-line no-unused-vars\n    handleAvatarSuccess(response, file, fileList) {\n      console.log(response);\n\n      // 更新 form.avatar 和 fileList，确保 fileList 包含对象而不是字符串\n      this.form.avatar = response.data; // 后端返回的图片 URL\n      console.log(this.form.avatar);\n      console.log(Date.now());\n      console.log(file.name);\n      console.log(response.data);\n      this.$set(this.fileList = [{\n        uid: Date.now(),\n        // 唯一 ID\n        name: file.name,\n        // 文件名\n        url: response.data // 文件 URL\n      }]);\n      console.log(this.fileList);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","goodsName","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","username","required","message","trigger","ids","fileList","created","load","methods","delBatch","length","$message","warning","$confirm","type","then","response","$request","delete","res","code","success","lode","error","msg","catch","handleSelectionChange","rows","map","v","id","del","handleEdit","row","stringify","handleAdd","role","save","$refs","formRef","validate","valid","url","method","reset","get","params","list","toto","console","log","handleCurrentChange","handleAvatarSuccess","file","avatar","Date","now","$set","uid"],"sources":["src/views/manager/ShoppingView.vue"],"sourcesContent":["<template>\r\n<div class=\"\">\r\n    <div>\r\n        <el-input style=\"width: 200px\" placeholder=\"查询商品名\" v-model=\"goodsName\"></el-input>\r\n        <el-button type=\"primary\" @click=\"load(1)\">查询</el-button>\r\n        <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n    <div style=\"margin: 10px 0\">\r\n        <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n    <el-table :data=\"tableData\" stripe :header-cell-style=\"{ backgroundColor: 'aliceblue', color: '#666' }\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"ID\" prop=\"id\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"商品名\" prop=\"goodsName\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"价格\" prop=\"price\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"头像\">\r\n            <template v-slot=\"scope\">\r\n                <div style=\"display: flex; align-items: center\">\r\n                    <el-image style=\"width: 50px; height: 50px; \" v-if=\"scope.row.avatar\" :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n                </div>\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\">\r\n            <template v-slot=\"scope\">\r\n                <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n            </template>\r\n        </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"30%\">\r\n            <el-form :model=\"form\" label-width=\"80px\" style=\"padding-right: 20px\" :rules=\"rules\" ref=\"formRef\">\r\n                <el-form-item label=\"商品名\" prop=\"goodsName\">\r\n                <el-input v-model=\"form.goodsName\" placeholder=\"商品名\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"价格\" prop=\"price\">\r\n                <el-input v-model=\"form.price\" placeholder=\"价格\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"头像\">\r\n                <el-upload\r\n                    class=\"avatar-uploader\"\r\n                    action='http://localhost:8081/file/upload' \r\n                    :headers=\"{ token: user.token }\"\r\n                    :file-list=\"fileList\"\r\n                    list-type=\"picture\"\r\n                    :on-success=\"handleAvatarSuccess\"\r\n                >\r\n                    <el-button type=\"primary\">上传头像</el-button>\r\n                </el-upload>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    name:\"ShoppingView\",\r\n    data(){\r\n        return{\r\n            tableData:[],\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 5,  // 每页显示的个数\r\n            goodsName: '',\r\n            total: 0,\r\n            fromVisible: false,\r\n            form: {},\r\n            user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\r\n            rules: {\r\n                username: [\r\n                { required: true, message: '请输入账号', trigger: 'blur' },\r\n                ]\r\n            },\r\n            ids: [],\r\n            fileList: []\r\n        }\r\n    },\r\n    created(){\r\n        this.load()\r\n    },\r\n    \r\n    methods:{\r\n\r\n        delBatch() {\r\n            if (!this.ids.length) {\r\n                this.$message.warning('请选择数据')\r\n                return\r\n            }\r\n              // eslint-disable-next-line no-unused-vars\r\n            this.$confirm('您确认批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/goods/delete/batch', { data: this.ids }).then(res => {\r\n                if (res.code === '200') {   // 表示操作成功\r\n                    this.$message.success('操作成功')\r\n                    this.lode()\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n                })\r\n            }).catch(() => {})\r\n        },\r\n        handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n            this.ids = rows.map(v => v.id)\r\n        },\r\n        del(id) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            this.$confirm('您确认删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/goods/delete/' + id).then(res => {\r\n                if (res.code === '200') {   // 表示操作成功\r\n                    this.$message.success('操作成功')\r\n                    this.load(1)\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n                })\r\n            }).catch(() => {})\r\n        },\r\n        handleEdit(row) {   // 编辑数据\r\n            this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        handleAdd() {   // 新增数据\r\n            this.form = { role: '商品' }  // 新增数据的时候清空数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n            this.$refs.formRef.validate((valid) => {\r\n                if (valid) {\r\n                this.$request({\r\n                    url: this.form.id ? '/goods/update': '/goods/add',\r\n                    method: this.form.id ? 'PUT' : 'POST',\r\n                    data: this.form\r\n                }).then(res => {\r\n                    if (res.code === '200') {  // 表示成功保存\r\n                    this.$message.success('保存成功')\r\n                    this.load(1)\r\n                    this.fromVisible = false\r\n                    } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n                }\r\n            })\r\n        },\r\n        reset() {\r\n            this.goodsName = ''\r\n            this.load()\r\n        },\r\n        load(pageNum) {  // 分页查询\r\n            if (pageNum)  this.pageNum = pageNum\r\n            this.$request.get('/goods/selectByPage', {\r\n                params: {\r\n                pageNum: this.pageNum,\r\n                pageSize: this.pageSize,\r\n                goodsName: this.goodsName,\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data.list\r\n                this.total = res.data.toto\r\n            })\r\n            console.log(tableData);\r\n            console.log(total);\r\n            \r\n            \r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            this.load(pageNum)\r\n        },\r\n        // eslint-disable-next-line no-unused-vars\r\n        handleAvatarSuccess(response, file, fileList) {\r\n            console.log(response);\r\n            \r\n    // 更新 form.avatar 和 fileList，确保 fileList 包含对象而不是字符串\r\n            this.form.avatar = response.data;  // 后端返回的图片 URL\r\n            console.log(this.form.avatar);\r\n            console.log(Date.now());\r\n            console.log(file.name);\r\n            console.log(response.data);\r\n            \r\n            this.$set(this.fileList = [{\r\n                uid: Date.now(), // 唯一 ID\r\n                name: file.name, // 文件名\r\n                url: response.data // 文件 URL\r\n            }]);\r\n            console.log(this.fileList);\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}