{"ast":null,"code":"export default {\n  name: \"UserView\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 5,\n      // 每页显示的个数\n      username: '',\n      name: '',\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.lode();\n  },\n  methods: {\n    lode() {\n      this.$request.get('/user/selectAll').then(res => {\n        this.tableData = res.data;\n      });\n    },\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      // eslint-disable-next-line no-unused-vars\n      this.$confirm('您确认批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/user/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","username","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","lode","methods","$request","get","then","res","delBatch","length","$message","warning","$confirm","type","response","delete","code","success","load","error","msg","catch","handleSelectionChange","rows","map","v","id"],"sources":["src/views/manager/UserView.vue"],"sourcesContent":["<template>\r\n    <div class=\"\">\r\n        <div>\r\n            <el-input style=\"width: 200px\" placeholder=\"查询用户名\" v-model=\"username\"></el-input>\r\n            <el-input style=\"width: 200px; margin: 0 5px\" placeholder=\"查询姓名\"  v-model=\"name\"></el-input>\r\n            <el-button type=\"primary\" @click=\"load(1)\">查询</el-button>\r\n            <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n        <div style=\"margin: 10px 0\">\r\n        <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n        </div>\r\n        <el-table :data=\"tableData\" stripe :header-cell-style=\"{ backgroundColor: 'aliceblue', color: '#666' }\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column label=\"ID\" prop=\"id\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"用户名\" prop=\"username\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"姓名\" prop=\"name\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"地址\" prop=\"address\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"电话\" prop=\"phone\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"邮件地址\" prop=\"email\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"头像\">\r\n                <template v-slot=\"scope\">\r\n                    <el-image v-if=\"scope.row.avatar\" :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\" style=\"width: 50px;height: 50px;border-radius: 50%;\"></el-image>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"角色\" prop=\"role\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"操作\" align=\"center\">\r\n                <template>\r\n                    <el-button size=\"mini\" type=\"primary\" plain>编辑</el-button>\r\n                    <el-button size=\"mini\" type=\"danger\" plain>删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    name:\"UserView\",\r\n    data(){\r\n        return{\r\n            tableData:[],\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 5,  // 每页显示的个数\r\n            username: '',\r\n            name: '',\r\n            total: 0,\r\n            fromVisible: false,\r\n            form: {},\r\n            user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\r\n            rules: {\r\n                username: [\r\n                { required: true, message: '请输入账号', trigger: 'blur' },\r\n                ]\r\n            },\r\n            ids: []\r\n        }\r\n    },\r\n    created(){\r\n        this.lode()\r\n    },\r\n    methods:{\r\n        lode(){\r\n            this.$request.get('/user/selectAll').then(res=>{\r\n                this.tableData=res.data\r\n            })\r\n        },\r\n        delBatch() {\r\n            if (!this.ids.length) {\r\n                this.$message.warning('请选择数据')\r\n                return\r\n            }\r\n              // eslint-disable-next-line no-unused-vars\r\n            this.$confirm('您确认批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/user/delete/batch', { data: this.ids }).then(res => {\r\n                if (res.code === '200') {   // 表示操作成功\r\n                    this.$message.success('操作成功')\r\n                    this.load(1)\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n                })\r\n            }).catch(() => {})\r\n        },\r\n        handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n            this.ids = rows.map(v => v.id)\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"AAoCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,QAAA;MACAL,IAAA;MACAM,KAAA;MACAC,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAT,QAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,oBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAvB,SAAA,GAAAuB,GAAA,CAAAxB,IAAA;MACA;IACA;IACAyB,SAAA;MACA,UAAAR,GAAA,CAAAS,MAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;MACA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAP,IAAA,CAAAQ,QAAA;QACA,KAAAV,QAAA,CAAAW,MAAA;UAAAhC,IAAA,OAAAiB;QAAA,GAAAM,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAS,IAAA;YAAA;YACA,KAAAN,QAAA,CAAAO,OAAA;YACA,KAAAC,IAAA;UACA;YACA,KAAAR,QAAA,CAAAS,KAAA,CAAAZ,GAAA,CAAAa,GAAA;UACA;QACA;MACA,GAAAC,KAAA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAvB,GAAA,GAAAuB,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}