{"ast":null,"code":"export default {\n  name: \"UserView\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 5,\n      // 每页显示的个数\n      username: '',\n      name: '',\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.lode();\n  },\n  methods: {\n    lode() {\n      this.$request.get('/user/selectAll').then(res => {\n        this.tableData = res.data;\n      });\n    },\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      // eslint-disable-next-line no-unused-vars\n      this.$confirm('您确认批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/user/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            if (this.load(1)) {\n              this.lode();\n            } else {\n              this.load(1);\n            }\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    del(id) {\n      // eslint-disable-next-line no-unused-vars\n      this.$confirm('您确认删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/user/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {\n        role: '用户'\n      }; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/user/update' : '/user/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    reset() {\n      this.name = '';\n      this.username = '';\n      this.load();\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/user/selectByPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    // eslint-disable-next-line no-unused-vars\n    handleAvatarSuccess(response, file, fileList) {\n      // 把user的头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","username","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","lode","methods","$request","get","then","res","delBatch","length","$message","warning","$confirm","type","response","delete","code","success","load","error","msg","catch","handleSelectionChange","rows","map","v","id","del","handleEdit","row","stringify","handleAdd","role","save","$refs","formRef","validate","valid","url","method","reset","params","records","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar"],"sources":["src/views/manager/UserView.vue"],"sourcesContent":["<template>\r\n    <div class=\"\">\r\n        <div>\r\n            <el-input style=\"width: 200px\" placeholder=\"查询用户名\" v-model=\"username\"></el-input>\r\n            <el-input style=\"width: 200px; margin: 0 5px\" placeholder=\"查询姓名\"  v-model=\"name\"></el-input>\r\n            <el-button type=\"primary\" @click=\"load(1)\">查询</el-button>\r\n            <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n        <div style=\"margin: 10px 0\">\r\n            <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n            <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n        </div>\r\n        <el-table :data=\"tableData\" stripe :header-cell-style=\"{ backgroundColor: 'aliceblue', color: '#666' }\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"ID\" prop=\"id\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"用户名\" prop=\"username\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"姓名\" prop=\"name\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"地址\" prop=\"address\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"电话\" prop=\"phone\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"邮件地址\" prop=\"email\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"头像\">\r\n                <template v-slot=\"scope\">\r\n                    <div style=\"display: flex; align-items: center\">\r\n                        <el-image style=\"width: 50px; height: 50px; border-radius: 50%\" v-if=\"scope.row.avatar\" :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"角色\" prop=\"role\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"操作\" align=\"center\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                    <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <div style=\"margin: 10px 0\">\r\n            <el-pagination\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"pageNum\"\r\n                :page-sizes=\"[100, 200, 300, 400]\"\r\n                :page-size=\"pageSize\"\r\n                layout=\"total, prev, pager, next\"\r\n                :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n\r\n        <el-dialog title=\"收货地址\" :visible.sync=\"fromVisible\" width=\"30%\">\r\n            <el-form :model=\"form\" label-width=\"80px\" style=\"padding-right: 20px\" :rules=\"rules\" ref=\"formRef\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"姓名\" prop=\"name\">\r\n                <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"电话\" prop=\"phone\">\r\n                <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"地址\" prop=\"address\">\r\n                <el-input type=\"textarea\" v-model=\"form.address\" placeholder=\"地址\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"角色\" prop=\"role\">\r\n                <el-radio-group v-model=\"form.role\">\r\n                    <el-radio label=\"管理员\"></el-radio>\r\n                    <el-radio label=\"用户\"></el-radio>\r\n                </el-radio-group>\r\n                </el-form-item>\r\n                <el-form-item label=\"头像\">\r\n                <el-upload\r\n                    class=\"avatar-uploader\"\r\n                    action=\"http://localhost:8081/file/upload\"\r\n                    :headers=\"{ token: user.token }\"\r\n                    :file-list=\"form.avatar? [form.avatar] : []\"\r\n                    list-type=\"picture\"\r\n                    :on-success=\"handleAvatarSuccess\"\r\n                >\r\n                    <el-button type=\"primary\">上传头像</el-button>\r\n                </el-upload>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    name:\"UserView\",\r\n    data(){\r\n        return{\r\n            tableData:[],\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 5,  // 每页显示的个数\r\n            username: '',\r\n            name: '',\r\n            total: 0,\r\n            fromVisible: false,\r\n            form: {},\r\n            user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\r\n            rules: {\r\n                username: [\r\n                { required: true, message: '请输入账号', trigger: 'blur' },\r\n                ]\r\n            },\r\n            ids: []\r\n        }\r\n    },\r\n    created(){\r\n        this.lode()\r\n    },\r\n    methods:{\r\n        lode(){\r\n            this.$request.get('/user/selectAll').then(res=>{\r\n                this.tableData=res.data\r\n            })\r\n        },\r\n        delBatch() {\r\n            if (!this.ids.length) {\r\n                this.$message.warning('请选择数据')\r\n                return\r\n            }\r\n              // eslint-disable-next-line no-unused-vars\r\n            this.$confirm('您确认批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/user/delete/batch', { data: this.ids }).then(res => {\r\n                if (res.code === '200') {   // 表示操作成功\r\n                    this.$message.success('操作成功')\r\n\r\n                    if(this.load(1)){\r\n                        this.lode()\r\n                    }else{\r\n                        this.load(1)\r\n                    }\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n                })\r\n            }).catch(() => {})\r\n        },\r\n        handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n            this.ids = rows.map(v => v.id)\r\n        },\r\n        del(id) {\r\n            // eslint-disable-next-line no-unused-vars\r\n            this.$confirm('您确认删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/user/delete/' + id).then(res => {\r\n                if (res.code === '200') {   // 表示操作成功\r\n                    this.$message.success('操作成功')\r\n                    this.load(1)\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n                })\r\n            }).catch(() => {})\r\n        },\r\n        handleEdit(row) {   // 编辑数据\r\n            this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        handleAdd() {   // 新增数据\r\n            this.form = { role: '用户' }  // 新增数据的时候清空数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n            this.$refs.formRef.validate((valid) => {\r\n                if (valid) {\r\n                this.$request({\r\n                    url: this.form.id ? '/user/update': '/user/add',\r\n                    method: this.form.id ? 'PUT' : 'POST',\r\n                    data: this.form\r\n                }).then(res => {\r\n                    if (res.code === '200') {  // 表示成功保存\r\n                    this.$message.success('保存成功')\r\n                    this.load(1)\r\n                    this.fromVisible = false\r\n                    } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n                }\r\n            })\r\n        },\r\n        reset() {\r\n            this.name = ''\r\n            this.username = ''\r\n            this.load()\r\n        },\r\n        load(pageNum) {  // 分页查询\r\n            if (pageNum)  this.pageNum = pageNum\r\n            this.$request.get('/user/selectByPage', {\r\n                params: {\r\n                pageNum: this.pageNum,\r\n                pageSize: this.pageSize,\r\n                username: this.username,\r\n                name: this.name\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data.records\r\n                this.total = res.data.total\r\n            })\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            this.load(pageNum)\r\n        },\r\n        // eslint-disable-next-line no-unused-vars\r\n        handleAvatarSuccess(response, file, fileList) {\r\n        // 把user的头像属性换成上传的图片的链接\r\n        this.form.avatar = response.data\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"AA8FA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,QAAA;MACAL,IAAA;MACAM,KAAA;MACAC,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAT,QAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,oBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAvB,SAAA,GAAAuB,GAAA,CAAAxB,IAAA;MACA;IACA;IACAyB,SAAA;MACA,UAAAR,GAAA,CAAAS,MAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;MACA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAP,IAAA,CAAAQ,QAAA;QACA,KAAAV,QAAA,CAAAW,MAAA;UAAAhC,IAAA,OAAAiB;QAAA,GAAAM,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAS,IAAA;YAAA;YACA,KAAAN,QAAA,CAAAO,OAAA;YAEA,SAAAC,IAAA;cACA,KAAAhB,IAAA;YACA;cACA,KAAAgB,IAAA;YACA;UACA;YACA,KAAAR,QAAA,CAAAS,KAAA,CAAAZ,GAAA,CAAAa,GAAA;UACA;QACA;MACA,GAAAC,KAAA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAvB,GAAA,GAAAuB,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA;IACA;IACAC,IAAAD,EAAA;MACA;MACA,KAAAd,QAAA;QAAAC,IAAA;MAAA,GAAAP,IAAA,CAAAQ,QAAA;QACA,KAAAV,QAAA,CAAAW,MAAA,mBAAAW,EAAA,EAAApB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAS,IAAA;YAAA;YACA,KAAAN,QAAA,CAAAO,OAAA;YACA,KAAAC,IAAA;UACA;YACA,KAAAR,QAAA,CAAAS,KAAA,CAAAZ,GAAA,CAAAa,GAAA;UACA;QACA;MACA,GAAAC,KAAA;IACA;IACAO,WAAAC,GAAA;MAAA;MACA,KAAAvC,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAsC,SAAA,CAAAD,GAAA;MACA,KAAAxC,WAAA;IACA;IACA0C,UAAA;MAAA;MACA,KAAAzC,IAAA;QAAA0C,IAAA;MAAA;MACA,KAAA3C,WAAA;IACA;IACA4C,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAjC,QAAA;YACAkC,GAAA,OAAAhD,IAAA,CAAAoC,EAAA;YACAa,MAAA,OAAAjD,IAAA,CAAAoC,EAAA;YACA3C,IAAA,OAAAO;UACA,GAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAS,IAAA;cAAA;cACA,KAAAN,QAAA,CAAAO,OAAA;cACA,KAAAC,IAAA;cACA,KAAA7B,WAAA;YACA;cACA,KAAAqB,QAAA,CAAAS,KAAA,CAAAZ,GAAA,CAAAa,GAAA;YACA;UACA;QACA;MACA;IACA;IACAoB,MAAA;MACA,KAAA1D,IAAA;MACA,KAAAK,QAAA;MACA,KAAA+B,IAAA;IACA;IACAA,KAAAjC,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAmB,QAAA,CAAAC,GAAA;QACAoC,MAAA;UACAxD,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,QAAA,OAAAA,QAAA;UACAL,IAAA,OAAAA;QACA;MACA,GAAAwB,IAAA,CAAAC,GAAA;QACA,KAAAvB,SAAA,GAAAuB,GAAA,CAAAxB,IAAA,CAAA2D,OAAA;QACA,KAAAtD,KAAA,GAAAmB,GAAA,CAAAxB,IAAA,CAAAK,KAAA;MACA;IACA;IACAuD,oBAAA1D,OAAA;MACA,KAAAiC,IAAA,CAAAjC,OAAA;IACA;IACA;IACA2D,oBAAA9B,QAAA,EAAA+B,IAAA,EAAAC,QAAA;MACA;MACA,KAAAxD,IAAA,CAAAyD,MAAA,GAAAjC,QAAA,CAAA/B,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}