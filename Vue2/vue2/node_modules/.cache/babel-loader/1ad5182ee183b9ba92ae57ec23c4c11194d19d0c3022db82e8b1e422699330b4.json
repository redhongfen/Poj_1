{"ast":null,"code":"export default {\n  name: \"SummaryView\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 5,\n      // 每页显示的个数\n      course_code: '',\n      student_id: '',\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  mounted() {\n    // 在控制台打印数据\n    console.log('tableData:', this.tableData);\n    console.log('pageNum:', this.pageNum);\n    console.log('pageSize:', this.pageSize);\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    // eslint-disable-next-line no-unused-vars\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    // eslint-disable-next-line no-unused-vars\n    handleAdd() {\n      // 新增数据\n      this.form = {\n        role: '用户'\n      }; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/grades/update' : '/grades/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    reset() {\n      this.name = '';\n      this.username = '';\n      this.load();\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/grades/selectByPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          course_code: this.course_code,\n          student_id: this.student_id\n        }\n      }).then(res => {\n        this.tableData = res.data.list;\n        this.total = res.data.toto;\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    // eslint-disable-next-line no-unused-vars\n    handleAvatarSuccess(response, file, fileList) {\n      // 把user的头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","course_code","student_id","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","username","required","message","trigger","ids","mounted","console","log","created","load","methods","handleSelectionChange","rows","map","v","id","handleAdd","role","save","$refs","formRef","validate","valid","$request","url","method","then","res","code","$message","success","error","msg","reset","get","params","list","toto","handleCurrentChange","handleAvatarSuccess","response","file","fileList","avatar"],"sources":["src/views/manager/SummaryView.vue"],"sourcesContent":["<template>\r\n    <div class=\"\">\r\n        <div>\r\n            <el-input style=\"width: 200px\" placeholder=\"查询课程代码\" v-model=\"course_code\"></el-input>\r\n            <el-input style=\"width: 200px; margin: 0 5px\" placeholder=\"查询学生学号\"  v-model=\"student_id\"></el-input>\r\n            <el-button type=\"primary\" @click=\"load(1)\">查询</el-button>\r\n            <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n        <div style=\"margin: 10px 0\">\r\n            <!-- <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n            <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button> -->\r\n        </div>\r\n        <el-table :data=\"tableData\" stripe :header-cell-style=\"{ backgroundColor: 'aliceblue', color: '#666' }\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"课程代码\" prop=\"course_code\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"分数\" prop=\"score\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"学生学号\" prop=\"student_id\" align=\"center\"></el-table-column>\r\n        </el-table>\r\n\r\n        <div style=\"margin: 10px 0\">\r\n            <el-pagination\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"pageNum\"\r\n                :page-sizes=\"[5, 10, 20, 50]\"\r\n                :page-size=\"pageSize\"\r\n                layout=\"total, prev, pager, next\"\r\n                :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    name:\"SummaryView\",\r\n    data(){\r\n        return{\r\n            tableData:[],\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 5,  // 每页显示的个数\r\n            course_code: '',\r\n            student_id: '',\r\n            total: 0,\r\n            fromVisible: false,\r\n            form: {},\r\n            user: JSON.parse(localStorage.getItem('honey-user') || '{}'),\r\n            rules: {\r\n                username: [\r\n                { required: true, message: '请输入账号', trigger: 'blur' },\r\n                ]\r\n            },\r\n            ids: []\r\n        }\r\n    },\r\n    mounted() {\r\n        // 在控制台打印数据\r\n        console.log('tableData:', this.tableData);\r\n        console.log('pageNum:', this.pageNum);\r\n        console.log('pageSize:', this.pageSize);\r\n    },\r\n    created(){\r\n        this.load()\r\n    },\r\n    \r\n    methods:{\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n            this.ids = rows.map(v => v.id)\r\n        },\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        handleAdd() {   // 新增数据\r\n            this.form = { role: '用户' }  // 新增数据的时候清空数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n            this.$refs.formRef.validate((valid) => {\r\n                if (valid) {\r\n                this.$request({\r\n                    url: this.form.id ? '/grades/update': '/grades/add',\r\n                    method: this.form.id ? 'PUT' : 'POST',\r\n                    data: this.form\r\n                }).then(res => {\r\n                    if (res.code === '200') {  // 表示成功保存\r\n                    this.$message.success('保存成功')\r\n                    this.load(1)\r\n                    this.fromVisible = false\r\n                    } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n                }\r\n            })\r\n        },\r\n        reset() {\r\n            this.name = ''\r\n            this.username = ''\r\n            this.load()\r\n        },\r\n        load(pageNum) {  // 分页查询\r\n            if (pageNum)  this.pageNum = pageNum\r\n            this.$request.get('/grades/selectByPage', {\r\n                params: {\r\n                pageNum: this.pageNum,\r\n                pageSize: this.pageSize,\r\n                course_code: this.course_code,\r\n                student_id: this.student_id\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data.list\r\n                this.total = res.data.toto\r\n            })\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            this.load(pageNum)\r\n        },\r\n        // eslint-disable-next-line no-unused-vars\r\n        handleAvatarSuccess(response, file, fileList) {\r\n        // 把user的头像属性换成上传的图片的链接\r\n        this.form.avatar = response.data\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"AAkCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,WAAA;MACAC,UAAA;MACAC,KAAA;MACAC,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,OAAA,CAAAC,GAAA,oBAAArB,SAAA;IACAoB,OAAA,CAAAC,GAAA,kBAAApB,OAAA;IACAmB,OAAA,CAAAC,GAAA,mBAAAnB,QAAA;EACA;EACAoB,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IAEA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAR,GAAA,GAAAQ,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA;IACA;IAEA;IACAC,UAAA;MAAA;MACA,KAAAvB,IAAA;QAAAwB,IAAA;MAAA;MACA,KAAAzB,WAAA;IACA;IACA0B,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA;YACAC,GAAA,OAAA/B,IAAA,CAAAsB,EAAA;YACAU,MAAA,OAAAhC,IAAA,CAAAsB,EAAA;YACA9B,IAAA,OAAAQ;UACA,GAAAiC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAArB,IAAA;cACA,KAAAjB,WAAA;YACA;cACA,KAAAqC,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;IACAC,MAAA;MACA,KAAAjD,IAAA;MACA,KAAAgB,QAAA;MACA,KAAAS,IAAA;IACA;IACAA,KAAAtB,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAoC,QAAA,CAAAW,GAAA;QACAC,MAAA;UACAhD,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,WAAA,OAAAA,WAAA;UACAC,UAAA,OAAAA;QACA;MACA,GAAAoC,IAAA,CAAAC,GAAA;QACA,KAAAzC,SAAA,GAAAyC,GAAA,CAAA1C,IAAA,CAAAmD,IAAA;QACA,KAAA7C,KAAA,GAAAoC,GAAA,CAAA1C,IAAA,CAAAoD,IAAA;MACA;IACA;IACAC,oBAAAnD,OAAA;MACA,KAAAsB,IAAA,CAAAtB,OAAA;IACA;IACA;IACAoD,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAjD,IAAA,CAAAkD,MAAA,GAAAH,QAAA,CAAAvD,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}